// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Countdown /> should render a simple countdown 1`] = `
<Countdown
  date={1482453477527}
>
  <span>
    01
    :
    01
    :
    01
    :
    50
  </span>
</Countdown>
`;

exports[`<Countdown /> should render and unmount component on countdown end 1`] = `
<Countdown
  date={1482453477527}
  zeroPadTime={0}
>
  <span>
    1
    :
    1
    :
    1
    :
    50
  </span>
</Countdown>
`;

exports[`<Countdown /> should render and unmount component on countdown end 2`] = `
<Countdown
  date={0}
  zeroPadTime={0}
>
  <span>
    1
    :
    1
    :
    1
    :
    50
  </span>
</Countdown>
`;

exports[`<Countdown /> should render custom renderer output 1`] = `
<Countdown
  date={1482453477527}
  renderer={[Function]}
>
  <div>
    1
    1
    1
    50
  </div>
</Countdown>
`;

exports[`<Countdown /> should render with zeroPadDays => 3 1`] = `
<Countdown
  date={1483227367071}
  zeroPadDays={3}
>
  <span>
    010
    :
    00
    :
    00
    :
    00
  </span>
</Countdown>
`;

exports[`<Countdown /> should trigger onTick and onComplete callbacks 1`] = `
<Countdown
  date={1482363377071}
  onComplete={[MockFunction]}
  onTick={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "completed": false,
            "days": 0,
            "hours": 0,
            "milliseconds": 0,
            "minutes": 0,
            "seconds": 6,
            "total": 6000,
          },
        ],
        Array [
          Object {
            "completed": false,
            "days": 0,
            "hours": 0,
            "milliseconds": 0,
            "minutes": 0,
            "seconds": 6,
            "total": 6000,
          },
        ],
        Array [
          Object {
            "completed": false,
            "days": 0,
            "hours": 0,
            "milliseconds": 0,
            "minutes": 0,
            "seconds": 6,
            "total": 6000,
          },
        ],
        Array [
          Object {
            "completed": false,
            "days": 0,
            "hours": 0,
            "milliseconds": 0,
            "minutes": 0,
            "seconds": 6,
            "total": 6000,
          },
        ],
        Array [
          Object {
            "completed": false,
            "days": 0,
            "hours": 0,
            "milliseconds": 0,
            "minutes": 0,
            "seconds": 6,
            "total": 6000,
          },
        ],
        Array [
          Object {
            "completed": false,
            "days": 0,
            "hours": 0,
            "milliseconds": 0,
            "minutes": 0,
            "seconds": 6,
            "total": 6000,
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <span>
    00
    :
    00
    :
    00
    :
    06
  </span>
</Countdown>
`;

exports[`<Countdown /> unit should render with unit => "d" 1`] = `
<Countdown
  date={1482453477527}
  renderer={[Function]}
  unit="d"
>
  <div>
    1d:1h:1m:50s:0ms
  </div>
</Countdown>
`;

exports[`<Countdown /> unit should render with unit => "h" 1`] = `
<Countdown
  date={1482453477527}
  renderer={[Function]}
  unit="h"
>
  <div>
    0d:25h:1m:50s:0ms
  </div>
</Countdown>
`;

exports[`<Countdown /> unit should render with unit => "m" 1`] = `
<Countdown
  date={1482453477527}
  renderer={[Function]}
  unit="m"
>
  <div>
    0d:0h:1501m:50s:0ms
  </div>
</Countdown>
`;

exports[`<Countdown /> unit should render with unit => "ms" 1`] = `
<Countdown
  date={1482453477527}
  renderer={[Function]}
  unit="ms"
>
  <div>
    0d:0h:0m:0s:90110000ms
  </div>
</Countdown>
`;

exports[`<Countdown /> unit should render with unit => "s" 1`] = `
<Countdown
  date={1482453477527}
  renderer={[Function]}
  unit="s"
>
  <div>
    0d:0h:0m:90110s:0ms
  </div>
</Countdown>
`;
